# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/templates/common/copy.gni")
import("//build/templates/metadata/module_info.gni")

ohos_copy("ace_tools") {
  sources = [ "//developtools/ace_tools/cli" ]
  outputs = [ target_out_dir + "/$target_name/" ]
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("ets") {
  sources = [ "./engine/ets" ]
  outputs = [ target_out_dir + "/$target_name/" ]
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("systemres") {
  sources = [ "./engine/systemres" ]
  outputs = [ target_out_dir + "/$target_name/" ]
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("node_header") {
  sources = [
    "//third_party/node/src/js_native_api.h",
    "//third_party/node/src/js_native_api_types.h",
    "//third_party/node/src/node_api.h",
    "//third_party/node/src/node_api_types.h",
  ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("napi_header") {
  sources = [ "//foundation/arkui/napi/interfaces/kits/napi/native_api.h" ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("sdkconfig") {
  sources = [ "./sdkConfig.json" ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("engine_apiconfig") {
  sources = [ "./engine/apiConfig.json" ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("api_apiconfig") {
  sources = [ "./plugins/api/apiConfig.json" ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

ohos_copy("component_apiconfig") {
  sources = [ "./plugins/component/apiConfig.json" ]
  outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
  module_source_dir = target_out_dir + "/$target_name/"
  module_install_name = ""
  part_name = "common"
  subsystem_name = "common"
}

# For xcframework auto packing
template("copy_xcframework") {
  forward_variables_from(invoker,
                         [
                           "deps",
                           "sources",
                           "outputs",
                         ])
  action(target_name) {
    script = "copy_xcframework.py"
    args = [
      "--input",
      rebase_path(sources[0], root_build_dir),
      "--output",
      rebase_path(outputs[0], root_build_dir),
    ]
    if (defined(deps)) {
      deps += [ ":${target_name}_info" ]
    } else {
      deps = [ ":${target_name}_info" ]
    }
  }
  _main_target_name = target_name
  generate_module_info("${target_name}_info") {
    module_type = "framework"
    module_install_name = ""
    module_name = _main_target_name
    module_source_dir = "${root_out_dir}/lib.xcframework/${_main_target_name}"
    install_enable = false
  }
}

if (target_os == "ios") {
  copy_xcframework("copy_libarkui_ios_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libarkui_ios" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libarkui_ios.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  ohos_copy("node_header_xcframework") {
    sources = [
      "//third_party/node/src/js_native_api.h",
      "//third_party/node/src/js_native_api_types.h",
      "//third_party/node/src/node_api.h",
      "//third_party/node/src/node_api_types.h",
    ]
    outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
    module_source_dir = target_out_dir + "/$target_name/"
    module_install_name = ""
    part_name = "common"
    subsystem_name = "common"
  }
  
  ohos_copy("napi_header_xcframework") {
    sources = [ "//foundation/arkui/napi/interfaces/kits/napi/native_api.h" ]
    outputs = [ target_out_dir + "/$target_name/{{source_file_part}}" ]
    module_source_dir = target_out_dir + "/$target_name/"
    module_install_name = ""
    part_name = "common"
    subsystem_name = "common"
  }

  copy_xcframework("copy_libanimator_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libanimator" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libanimator.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libarkui_componentsnapshot_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libarkui_componentsnapshot" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libarkui_componentsnapshot.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libconfiguration_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libconfiguration" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libconfiguration.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libfont_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libfont" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libfont.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libmeasure_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libmeasure" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libmeasure.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libmediaquery_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libmediaquery" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libmediaquery.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_libpromptaction_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:libpromptaction" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/libpromptaction.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }

  copy_xcframework("copy_librouter_xcframework") {
    deps = [ "//foundation/arkui/ace_engine/adapter/ios/build:librouter" ]
    sources = [
      "${root_out_dir}/lib.ios.framework/arkui/arkui-x/librouter.xcframework",
    ]
    outputs = [ "${root_out_dir}/lib.xcframework/${target_name}" ]
  }
}
